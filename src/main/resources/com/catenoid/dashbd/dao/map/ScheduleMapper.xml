<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.catenoid.dashbd.dao.ScheduleMapper" >



	<select id="selectSchdule" parameterType="java.util.Map" resultType="java.util.Map">
		<![CDATA[
			SELECT ID
				, NAME
				, BCID
				, DATE_FORMAT(start_date, '%Y/%m/%d %H:%i') start_date
				, DATE_FORMAT(end_date, '%Y/%m/%d %H:%i') end_date
				
				, DATE_FORMAT(start_date , '%Y') start_year 
				, DATE_FORMAT(start_date , '%m') start_month
				, DATE_FORMAT(start_date , '%d') start_day
				, DATE_FORMAT(start_date , '%H') start_hour
				, DATE_FORMAT(start_date , '%i') start_mins
				, DATE_FORMAT(end_date , '%Y') end_year 
				, DATE_FORMAT(end_date , '%m') end_month
				, DATE_FORMAT(end_date , '%d') end_day
				, DATE_FORMAT(end_date , '%H') end_hour
				, DATE_FORMAT(end_date , '%i') end_mins
			FROM schedule s 
			WHERE 1=1
			AND service_area_id = #{serviceAreaId} 
		--	AND DATE_FORMAT(start_date , '%Y%m%d') = DATE_FORMAT(NOW() , '%Y%m%d');
			order by start_date asc
		]]>
	</select>
	
	<select id="selectSchduleTime" parameterType="java.util.Map" resultType="java.util.Map">
		<![CDATA[
			SELECT id
				, name
				, s.BCID
				, DATE_FORMAT(start_date, '%Y/%m/%d %H:%i%s') start_date
				, DATE_FORMAT(end_date, '%Y/%m/%d %H:%i:%s') end_date

				, DATE_FORMAT(start_date , '%H') start_hour
				, DATE_FORMAT(start_date , '%i') start_mins
				, DATE_FORMAT(start_date , '%s') start_second
				

				, DATE_FORMAT(end_date , '%H') end_hour
				, DATE_FORMAT(end_date , '%i') end_mins
				, DATE_FORMAT(end_date , '%s') end_second
				, b.transactionId
				, b.serviceId
				, b.service
				, b.service_name
				, b.language
				, b.GBR
				, b.QCI
				, b.level
				, b.preEmptionCapabiity
				, b.preEmptionVulnerability
				, b.fecType
				, b.fecRatio
				, b.said
				, b.schedule_start
				, b.schedule_stop
				, b.reportType
				, b.offsetTime
				, b.randomTime
				, b.fileURI
				, b.deliveryInfo_start
				, b.deliveryInfo_end
				, b.mpdURI
				, b.samplePercentage
			FROM schedule s 
			left join broadcast_info b on s.BCID = b.BCID
			WHERE 1=1
			AND id = #{id} 
		]]>
	</select>
	<insert id = "addScheduleWithInitContent" parameterType="java.util.Map">
		INSERT INTO schedule
			(service_area_id, content_id, name, start_date, end_date)
		VALUES
			(#{serviceAreaId}, #{contentId}, #{titleName}
				,  str_to_date(concat(DATE_FORMAT(now() , '%Y%m%d'), #{startTime}), '%Y%m%d%H%i')
				,  str_to_date(concat(DATE_FORMAT(now() , '%Y%m%d'), #{endTime}), '%Y%m%d%H%i')
			)
	</insert>
	
	<insert id = "insertBroadcastInfo" parameterType="java.util.Map" useGeneratedKeys="true" keyProperty="BCID">
		
		INSERT INTO broadcast_info(transactionId
			, serviceId 
			, service
			, service_name
			, language
			, GBR
			, QCI
			, level
			, preEmptionCapabiity
			, preEmptionVulnerability
			, fecType
			, fecRatio
			, said
			, schedule_start
			, schedule_stop
			, reportType
			, offsetTime
			, randomTime
			, fileURI
			, deliveryInfo_start
			, deliveryInfo_end
			, mpdURI
			, samplePercentage
		)values(#{transactionId}
			, #{serviceId}
			, #{serviceType}
			, #{name}
			, #{serviceLanguage}
			, #{GBR}
			, #{QCI}
			, #{level}
			, #{preEmptionCapabiity}
			, #{preEmptionVulnerability}
			, #{fecType}
			, #{fecRatio}
			, #{said}
			, #{schedule_start}
			, #{schedule_stop}
			, #{reportType}
			, #{offsetTime}
			, #{randomTime}
			, #{fileURI}
			, #{deliveryInfo_start}
			, #{deliveryInfo_end}
			, #{mpdURI}
			, #{samplePercentage}
		)
	</insert>
	
	<update id = "updateSchedule" parameterType="java.util.Map">
		update schedule
		set BCID = #{BCID} 
		where id = #{id}
	</update>
	
  <resultMap id="BaseResultMap" type="com.catenoid.dashbd.dao.model.Schedule" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="start_date" property="startDate" jdbcType="TIMESTAMP" />
    <result column="end_date" property="endDate" jdbcType="TIMESTAMP" />
    <result column="created_at" property="createdAt" jdbcType="TIMESTAMP" />
    <result column="updated_at" property="updatedAt" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, name, start_date, end_date, created_at, updated_at
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.catenoid.dashbd.dao.model.ScheduleExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from schedule
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from schedule
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from schedule
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.catenoid.dashbd.dao.model.ScheduleExample" >
    delete from schedule
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.catenoid.dashbd.dao.model.Schedule" >
    insert into schedule (id, name, start_date, end_date, 
      created_at, updated_at)
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{startDate,jdbcType=TIMESTAMP}, #{endDate,jdbcType=TIMESTAMP},
      #{createdAt,jdbcType=TIMESTAMP}, #{updatedAt,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.catenoid.dashbd.dao.model.Schedule" >
    insert into schedule
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="startDate != null" >
        start_date,
      </if>
      <if test="endDate != null" >
        end_date,
      </if>
      <if test="createdAt != null" >
        created_at,
      </if>
      <if test="updatedAt != null" >
        updated_at,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="startDate != null" >
        #{startDate,jdbcType=TIMESTAMP},
      </if>
      <if test="endDate != null" >
        #{endDate,jdbcType=TIMESTAMP},
      </if>
      <if test="createdAt != null" >
        #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedAt != null" >
        #{updatedAt,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.catenoid.dashbd.dao.model.ScheduleExample" resultType="java.lang.Integer" >
    select count(*) from schedule
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update schedule
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.name != null" >
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.startDate != null" >
        start_date = #{record.startDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.endDate != null" >
        end_date = #{record.endDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createdAt != null" >
        created_at = #{record.createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updatedAt != null" >
        updated_at = #{record.updatedAt,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update schedule
    set id = #{record.id,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      start_date = #{record.startDate,jdbcType=TIMESTAMP},
      end_date = #{record.endDate,jdbcType=TIMESTAMP},
      created_at = #{record.createdAt,jdbcType=TIMESTAMP},
      updated_at = #{record.updatedAt,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.catenoid.dashbd.dao.model.Schedule" >
    update schedule
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="startDate != null" >
        start_date = #{startDate,jdbcType=TIMESTAMP},
      </if>
      <if test="endDate != null" >
        end_date = #{endDate,jdbcType=TIMESTAMP},
      </if>
      <if test="createdAt != null" >
        created_at = #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedAt != null" >
        updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.catenoid.dashbd.dao.model.Schedule" >
    update schedule
    set name = #{name,jdbcType=VARCHAR},
      start_date = #{startDate,jdbcType=TIMESTAMP},
      end_date = #{endDate,jdbcType=TIMESTAMP},
      created_at = #{createdAt,jdbcType=TIMESTAMP},
      updated_at = #{updatedAt,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>