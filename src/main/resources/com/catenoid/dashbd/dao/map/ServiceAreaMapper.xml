<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.catenoid.dashbd.dao.ServiceAreaMapper" >
  <resultMap id="BaseResultMap" type="com.catenoid.dashbd.dao.model.ServiceArea" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="bandwidth" property="bandwidth" jdbcType="BIGINT" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="city" property="city" jdbcType="VARCHAR" />
    <result column="created_at" property="createdAt" jdbcType="TIMESTAMP" />
    <result column="updated_at" property="updatedAt" jdbcType="TIMESTAMP" />
  </resultMap>
  <resultMap id="ServiceAreaEnbApMap" type="com.catenoid.dashbd.dao.model.ServiceAreaEnbAp" >
  	<id column="service_area_id" property="serviceAreaId" jdbcType="INTEGER" />
  	<result column="service_area_bandwidth" property="serviceAreaBandwidth" jdbcType="BIGINT" />
  	<result column="service_area_name" property="serviceAreaName" jdbcType="VARCHAR" />
  	<result column="service_area_city" property="serviceAreaCity" jdbcType="VARCHAR" />
  	<result column="enb_ap_id" property="enbApId" jdbcType="INTEGER" />
  	<result column="enb_ap_name" property="enbApName" jdbcType="VARCHAR" />
  	<result column="longitude" property="longitude" jdbcType="DECIMAL" />
  	<result column="latitude" property="latitude" jdbcType="DECIMAL" />
  	<result column="plmn" property="plmn" jdbcType="VARCHAR" />
  	<result column="mbsfn" property="mbsfn" jdbcType="VARCHAR" />
  	<result column="created_at" property="createdAt" jdbcType="TIMESTAMP" />
    <result column="updated_at" property="updatedAt" jdbcType="TIMESTAMP" />
  </resultMap>
  
	<resultMap id="ServiceAreaByBmSc" type="com.catenoid.dashbd.dao.model.BmscServiceArea" >
		<result column="bmsc_id" property="bmscId" jdbcType="INTEGER" />
		<result column="service_area_id" property="serviceAreaId" jdbcType="INTEGER" />
		<result column="created_at" property="createdAt" jdbcType="TIMESTAMP" />
		<result column="updated_at" property="updatedAt" jdbcType="TIMESTAMP" />
		<result column="totalCount" property="totalCount" jdbcType="INTEGER" />
	</resultMap>

	<resultMap id="OperatorServiceArea" type="com.catenoid.dashbd.dao.model.Operator" >
		<result column="id" property="id" jdbcType="INTEGER" />
		<result column="name" property="name" jdbcType="VARCHAR" />
		<result column="description" property="description" jdbcType="VARCHAR" />
		<result column="created_at" property="createdAt" jdbcType="TIMESTAMP" />
		<result column="updated_at" property="updatedAt" jdbcType="TIMESTAMP" />
		<result column="totalCount" property="totalCount" jdbcType="INTEGER" />
	</resultMap>
	
	<resultMap id="BmscServiceArea" type="com.catenoid.dashbd.dao.model.Bmsc" >
		<result column="id" property="id" jdbcType="INTEGER" />
		<result column="name" property="name" jdbcType="VARCHAR" />
		<result column="cicle" property="circle" jdbcType="VARCHAR" />
		<result column="created_at" property="createdAt" jdbcType="TIMESTAMP" />
		<result column="updated_at" property="updatedAt" jdbcType="TIMESTAMP" />
		<result column="totalCount" property="totalCount" jdbcType="INTEGER" />
	</resultMap>

	<resultMap id="ServiceAreaEnbAp" type="com.catenoid.dashbd.dao.model.ServiceAreaEnbAp" >
		<id column="service_area_id" property="serviceAreaId" jdbcType="INTEGER" />
		<result column="service_area_bandwidth" property="bandwidth" jdbcType="DECIMAL" />
		<result column="service_area_name" property="serviceAreaName" jdbcType="VARCHAR" />
		<result column="service_area_city" property="serviceAreaCity" jdbcType="VARCHAR" />
		<result column="enb_ap_id" property="enbApId" jdbcType="INTEGER" />
		<result column="enb_ap_name" property="enbApName" jdbcType="VARCHAR" />
		<result column="longitude" property="longitude" jdbcType="DECIMAL" />
		<result column="latitude" property="latitude" jdbcType="DECIMAL" />
		<result column="plmn" property="plmn" jdbcType="VARCHAR" />
		<result column="mbsfn" property="mbsfn" jdbcType="VARCHAR" />
		<result column="created_at" property="createdAt" jdbcType="TIMESTAMP" />
		<result column="updated_at" property="updatedAt" jdbcType="TIMESTAMP" />
		<result column="totalCount" property="totalCount" jdbcType="INTEGER" />
	</resultMap>
	
	<resultMap id="ServiceAreaCount" type="com.catenoid.dashbd.dao.model.ServiceAreaCount" >
		<result column="bmsc_id" property="bmscId" jdbcType="INTEGER" />
		<result column="city" property="city" jdbcType="VARCHAR" />
		<result column="count" property="count" jdbcType="INTEGER" />
	</resultMap>

	<resultMap id="ServiceAreaByBmScCity" type="com.catenoid.dashbd.dao.model.BmscServiceArea" >
		<result column="bmsc_id" property="bmscId" jdbcType="INTEGER" />
		<result column="service_area_id" property="serviceAreaId" jdbcType="INTEGER" />
		<result column="service_area_name" property="serviceAreaName" jdbcType="VARCHAR" />
		<result column="totalCount" property="totalCount" jdbcType="INTEGER" />
	</resultMap>

	<resultMap id="ScheduleSummaryByServiceArea" type="com.catenoid.dashbd.dao.model.ScheduleSummary" >
		<result column="id" property="scheduleId" jdbcType="INTEGER" />
		<result column="service_area_id" property="serviceAreaId" jdbcType="INTEGER" />
		<result column="content_id" property="contentId" jdbcType="INTEGER" />
		<result column="bcid" property="bcId" jdbcType="INTEGER" />
		<result column="name" property="scheduleName" jdbcType="VARCHAR" />
		<result column="start_date" property="startDate" jdbcType="TIMESTAMP" />
		<result column="end_date" property="endDate" jdbcType="TIMESTAMP" />
		<result column="created_at" property="createdAt" jdbcType="TIMESTAMP" />
		<result column="updated_at" property="updatedAt" jdbcType="TIMESTAMP" />
		<result column="totalCount" property="totalCount" jdbcType="INTEGER" />
		<result column="del_yn" property="delYn" jdbcType="VARCHAR" />
		<result column="thumbnail" property="thumbnail" jdbcType="VARCHAR" />
		<result column="progress_rate" property="progressRate" jdbcType="DECIMAL" />
		<result column="service_type" property="serviceType" jdbcType="VARCHAR" />
		<result column="category" property="category" jdbcType="VARCHAR" />
	</resultMap>

	<resultMap id="ServiceAreaByBmScId" type="com.catenoid.dashbd.dao.model.BmscServiceArea" >
		<result column="bmsc_id" property="bmscId" jdbcType="INTEGER" />
		<result column="service_area_id" property="serviceAreaId" jdbcType="INTEGER" />
		<result column="service_area_name" property="serviceAreaName" jdbcType="VARCHAR" />
		<result column="totalCount" property="totalCount" jdbcType="INTEGER" />
	</resultMap>	
		
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="and" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="or" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  or ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  or ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  or ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  or ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, bandwidth, name, city, created_at, updated_at
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.catenoid.dashbd.dao.model.ServiceAreaExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from service_area
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from service_area
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectServiceAreaEnbAp" resultMap="ServiceAreaEnbApMap" parameterType="com.catenoid.dashbd.dao.model.ServiceAreaExample" >
  	select 
	t1.service_area_id, t3.bandwidth as service_area_bandwidth, 
	t3.name as service_area_name, 
	t3.city as service_area_city,
	enb_ap_id, t2.name as enb_ap_name, 
	t2.longitude as longitude, 
	t2.latitude as latitude, 
	t2.plmn as plmn,
	t2.mbsfn as mbsfn,
	t1.created_at, t1.updated_at
	from service_area_enb_ap t1, enb_ap t2, service_area t3
	<if test="_parameter != null" >
      <include refid="Where_Clause" />
    </if>
    and t1.enb_ap_id = t2.id
    and t1.service_area_id = t3.id
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectServiceAreaEnbApRangeOuterJoin" resultMap="ServiceAreaEnbApMap" parameterType="com.catenoid.dashbd.dao.model.ServiceAreaExample" >
  	select 
	t1.service_area_id, 
    (select bandwidth from service_area where id=t1.service_area_id limit 1) as service_area_bandwidth, 
	(select name from service_area where id=t1.service_area_id limit 1)  as service_area_name, 
	(select city from service_area where id=t1.service_area_id limit 1)  as service_area_city,
	t2.id as enb_ap_id, t2.name as enb_ap_name, 
	t2.longitude as longitude, 
	t2.latitude as latitude, 
	t2.plmn as plmn,
	t2.mbsfn as mbsfn,
	t1.created_at, t1.updated_at
	from 	service_area_enb_ap t1 right outer join enb_ap t2 on t1.enb_ap_id = t2.id
	<if test="_parameter != null" >
      <include refid="Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from service_area
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.catenoid.dashbd.dao.model.ServiceAreaExample" >
    delete from service_area
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.catenoid.dashbd.dao.model.ServiceArea" >
    insert into service_area (id, bandwidth, name, city, 
      created_at, updated_at)
    values (#{id,jdbcType=INTEGER}, #{bandwidth,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{city,jdbcType=VARCHAR}, 
      #{createdAt,jdbcType=TIMESTAMP}, #{updatedAt,jdbcType=TIMESTAMP})
    <selectKey resultType="int" keyProperty="id" order="AFTER"> 
         SELECT LAST_INSERT_ID()
    </selectKey>
  </insert>
  <insert id="insertSelective" parameterType="com.catenoid.dashbd.dao.model.ServiceArea" >
    insert into service_area
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="bandwidth != null" >
      	bandwidth,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="city != null" >
        city,
      </if>
      <if test="createdAt != null" >
        created_at,
      </if>
      <if test="updatedAt != null" >
        updated_at,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="bandwidth != null" >
      	#{bandwidth,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="city != null" >
        #{city,jdbcType=VARCHAR},
      </if>
      <if test="createdAt != null" >
        #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedAt != null" >
        #{updatedAt,jdbcType=TIMESTAMP},
      </if>
    </trim>
    <selectKey resultType="int" keyProperty="id" order="AFTER"> 
         SELECT LAST_INSERT_ID()
    </selectKey>
  </insert>
  <select id="countByExample" parameterType="com.catenoid.dashbd.dao.model.ServiceAreaExample" resultType="java.lang.Integer" >
    select count(*) from service_area
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update service_area
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.bandwidth != null" >
      	bandwidth = #{record.bandwidth,jdbcType=INTEGER},
      </if>
      <if test="record.name != null" >
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.city != null" >
        city = #{record.city,jdbcType=VARCHAR},
      </if>
      <if test="record.createdAt != null" >
        created_at = #{record.createdAt,jdbcType=TIMESTAMP},
      </if>
        updated_at = now(),
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update service_area
    set id = #{record.id,jdbcType=INTEGER},
      bandwidth = #{record.bandwidth,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      city = #{record.city,jdbcType=VARCHAR},
      created_at = #{record.createdAt,jdbcType=TIMESTAMP},
      updated_at = now()
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.catenoid.dashbd.dao.model.ServiceArea" >
    update service_area
    <set >
      <if test="bandwidth != null" >
      	bandwidth = #{bandwidth,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="city != null" >
        city = #{city,jdbcType=VARCHAR},
      </if>
      <if test="createdAt != null" >
        created_at = #{createdAt,jdbcType=TIMESTAMP},
      </if>
        updated_at = now(),
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.catenoid.dashbd.dao.model.ServiceArea" >
    update service_area
    set bandwidth = #{bandwidth,jdbcType=INTEGER}, 
      name = #{name,jdbcType=VARCHAR},
      city = #{city,jdbcType=VARCHAR},
      created_at = #{createdAt,jdbcType=TIMESTAMP},
      updated_at = now()
    where id = #{id,jdbcType=INTEGER}
  </update>
  

	<select id="getSeviceAreaByBmSc" resultMap="ServiceAreaByBmSc" parameterType="com.catenoid.dashbd.dao.model.BmscServiceAreaSearchParam" >
		select
			bmsc_id, service_area_id, created_at, updated_at
			, (select count(*) from bmsc_service_area where 1 = 1 and bmsc_id = #{bmscId,jdbcType=INTEGER}) as totalCount
		from 
			bmsc_service_area
		where 1 = 1 
			and bmsc_id = #{bmscId,jdbcType=INTEGER}
		order by service_area_id
		limit #{page,jdbcType=INTEGER}, #{perPage,jdbcType=INTEGER}
	</select>
	
	<select id="getServiceAreaOperator" resultMap="OperatorServiceArea" parameterType="com.catenoid.dashbd.dao.model.OperatorSearchParam" >
		select
			id, name, description, created_at, updated_at
			, (select count(*) from operator where 1 = 1) as totalCount
		from 
			operator
		where 1 = 1 
		order by id
		limit #{page,jdbcType=INTEGER}, #{perPage,jdbcType=INTEGER}
	</select>
	
	<select id="getSeviceAreaBmSc" resultMap="BmscServiceArea" parameterType="com.catenoid.dashbd.dao.model.OperatorSearchParam" >
		select
			y.id, y.name, y.circle, y.created_at, y.updated_at
			, (select count(*) from operator_bmsc x, bmsc y where 1 = 1 and x.operator_id = #{operatorId,jdbcType=INTEGER} and y.id = x.bmsc_id) as totalCount
		from 
			operator_bmsc x, bmsc y
		where 1 = 1 
			and x.operator_id = #{operatorId,jdbcType=INTEGER}
			and y.id = x.bmsc_id
		order by y.id
		limit #{page,jdbcType=INTEGER}, #{perPage,jdbcType=INTEGER}
	</select>

	<select id="getServiceAreaEnbAp" resultMap="ServiceAreaEnbAp" parameterType="java.util.HashMap" >
	select 
		t1.service_area_id, t3.bandwidth as service_area_bandwidth, 
		t3.name as service_area_name, 
		t3.city as service_area_city,
		enb_ap_id, t2.name as enb_ap_name, 
		t2.longitude as longitude, 
		t2.latitude as latitude, 
		t2.plmn as plmn,
		t2.mbsfn as mbsfn,
		t1.created_at, t1.updated_at
		, 1 as totalCount
	from 
		service_area_enb_ap t1, enb_ap t2, service_area t3
	where 1 = 1
		<if test="serviceAreaId != null" >
		and t1.service_area_id = #{serviceAreaId,jdbcType=INTEGER}
		</if>
		and t1.enb_ap_id = t2.id
		<if test="bmscId != null" >
		and t2.bmsc_id = #{bmscId,jdbcType=INTEGER}
		</if>
		and t1.service_area_id = t3.id
	order by t1.created_at desc
	</select>
	
	<select id="getServiceAreaEnbApWithBounds" resultMap="ServiceAreaEnbAp" parameterType="java.util.HashMap" >
		select 
			ifnull( t1.service_area_id, '' ) as service_area_id, 
			ifnull( t1.service_area_name, '' ) as service_area_name, 
			t2.bandwidth as service_area_bandwidth, 
			t2.city as service_area_city,
			t2.id as enb_ap_id, 
			t2.name as enb_ap_name, 
			t2.longitude as longitude, 
			t2.latitude as latitude, 
			t2.plmn as plmn,
			t2.mbsfn as mbsfn,
			t2.created_at, 
			t2.updated_at
			, 0 as totalCount
		from 
			(
				select * from enb_ap
				where 1 = 1
					and latitude between #{swLat} and #{neLat}
					and longitude between #{swLng} and #{neLng}
					and bmsc_id = #{bmscId,jdbcType=INTEGER}
			) t2 left join
			( 
				select t3.id as service_area_id, t3.name as service_area_name, t1.enb_ap_id
				from 
					service_area_enb_ap t1, 
					service_area t3
				where 
					1 = 1
					and t3.id = #{serviceAreaId,jdbcType=INTEGER}
					and t1.service_area_id = t3.id 
			) t1
		on 1 = 1
			and t1.enb_ap_id = t2.id
		union all
		select 
			ifnull( t1.service_area_id, '' ) as service_area_id, 
			ifnull( t1.service_area_name, '' ) as service_area_name, 
			t2.bandwidth as service_area_bandwidth, 
			t2.city as service_area_city,
			t2.id as enb_ap_id, 
			t2.name as enb_ap_name, 
			t2.longitude as longitude, 
			t2.latitude as latitude, 
			t2.plmn as plmn,
			t2.mbsfn as mbsfn,
			t2.created_at, 
			t2.updated_at
			, 0 as totalCount
		from 
			(
				select * from enb_ap
				where 1 = 1
					and latitude between #{swLat} and #{neLat}
					and longitude between #{swLng} and #{neLng}
					and bmsc_id = #{bmscId,jdbcType=INTEGER}
					and not exists (select enb_ap_id from service_area_enb_ap x where x.service_area_id = #{serviceAreaId,jdbcType=INTEGER} and x.enb_ap_id = id)
			) t2 left join
			( 
				select t3.id as service_area_id, t3.name as service_area_name, t1.enb_ap_id
				from 
					service_area_enb_ap t1, 
					service_area t3, 
					(
						select enb_ap_id, max(service_area_id) as service_area_id, count(*) 
						from service_area_enb_ap 
						where 
							1 = 1 
							and service_area_id != #{serviceAreaId,jdbcType=INTEGER}
						group by enb_ap_id
					) t4
				where 
					1 = 1
					and t1.service_area_id != #{serviceAreaId,jdbcType=INTEGER}
					and t4.service_area_id = t1.service_area_id
					and t4.enb_ap_id = t1.enb_ap_id
					and t1.service_area_id = t3.id 
			) t1
		on 1 = 1
			and t1.enb_ap_id = t2.id
	</select>
	
	<!-- 
	<select id="getServiceAreaEnbApOther" resultMap="ServiceAreaEnbAp" parameterType="java.util.HashMap" >
		select 
			t1.service_area_id, t3.bandwidth as service_area_bandwidth, 
			t3.name as service_area_name, 
			t3.city as service_area_city,
			t1.enb_ap_id, t2.name as enb_ap_name, 
			t2.longitude as longitude, 
			t2.latitude as latitude, 
			t2.plmn as plmn,
			t2.mbsfn as mbsfn,
			t1.created_at, t1.updated_at
			, (select sum(cnt) from (
			select 1 as cnt from service_area_enb_ap t1, enb_ap t2, service_area t3 
			where 1 = 1 
			and t1.service_area_id != #{serviceAreaId,jdbcType=INTEGER}
			and t1.enb_ap_id = t2.id
			and t1.service_area_id = t3.id
			and t2.latitude between #{swLat} and #{neLat}
			and t2.longitude between #{swLng} and #{neLng}
			and not exists (select enb_ap_id from service_area_enb_ap x where x.service_area_id = #{serviceAreaId,jdbcType=INTEGER} and x.enb_ap_id = t1.enb_ap_id)
			group by t1.enb_ap_id) y) as totalCount
		from 
			service_area_enb_ap t1, enb_ap t2, service_area t3,
			(select enb_ap_id, max(service_area_id) as service_area_id, count(*) 
				from service_area_enb_ap
			where
				service_area_id != #{serviceAreaId,jdbcType=INTEGER}
			group by enb_ap_id) t4
		where 1 = 1
			and t1.service_area_id != #{serviceAreaId,jdbcType=INTEGER}
			and t4.service_area_id = t1.service_area_id
			and t4.enb_ap_id = t1.enb_ap_id
			and t1.enb_ap_id = t2.id
			and t2.latitude between #{swLat} and #{neLat}
			and t2.longitude between #{swLng} and #{neLng}
			and t1.service_area_id = t3.id
			and not exists (select enb_ap_id from service_area_enb_ap x where x.service_area_id = #{serviceAreaId,jdbcType=INTEGER} and x.enb_ap_id = t1.enb_ap_id)
	</select>
	-->
	
	<select id="getServiceAreaEnbApOther" resultMap="ServiceAreaEnbAp" parameterType="java.util.HashMap" >
		select 
			ifnull( t1.service_area_id, '' ) as service_area_id, 
			ifnull( t1.service_area_name, '' ) as service_area_name, 
			t2.bandwidth as service_area_bandwidth, 
			t2.city as service_area_city,
			t2.id as enb_ap_id, 
			t2.name as enb_ap_name, 
			t2.longitude as longitude, 
			t2.latitude as latitude, 
			t2.plmn as plmn,
			t2.mbsfn as mbsfn,
			t2.created_at, 
			t2.updated_at
			, 0 as totalCount
		from 
			(
				select * from enb_ap
				where 1 = 1
					and latitude between #{swLat} and #{neLat}
					and longitude between #{swLng} and #{neLng}
					and bmsc_id = #{bmscId,jdbcType=INTEGER}
					and not exists (select enb_ap_id from service_area_enb_ap x where x.service_area_id = #{serviceAreaId,jdbcType=INTEGER} and x.enb_ap_id = id)
			) t2 left join
			( 
				select t3.id as service_area_id, t3.name as service_area_name, t1.enb_ap_id
				from 
					service_area_enb_ap t1, 
					service_area t3, 
					(select enb_ap_id, max(service_area_id) as service_area_id, count(*) from service_area_enb_ap where service_area_id != #{serviceAreaId,jdbcType=INTEGER} group by enb_ap_id) t4
				where 
					t4.service_area_id = t1.service_area_id
					and t4.enb_ap_id = t1.enb_ap_id
					and t1.service_area_id = t3.id 
			) t1
		on 1 = 1
			and t1.enb_ap_id = t2.id
	</select>
	
	<select id="getServiceAreaCountByBmSc" resultMap="ServiceAreaCount" parameterType="com.catenoid.dashbd.dao.model.BmscServiceAreaSearchParam" >
	select x.bmsc_id, x.city, count(*) as count
	from
	(
		select a.bmsc_id, a.service_area_id, c.city, count(*) as count		
		from bmsc_service_area a, service_area_enb_ap b, enb_ap c		
		where 1 = 1
			and a.bmsc_id = #{bmscId,jdbcType=INTEGER}
			and b.service_area_id = a.service_area_id
			and c.id = b.enb_ap_id
			and c.bmsc_id = a.bmsc_id		
		group by a.bmsc_id, a.service_area_id, c.city
	) x
	group by  x.bmsc_id, x.city
	</select>

	<select id="getServiceAreaByLatLng" resultMap="ServiceAreaByBmScCity" parameterType="com.catenoid.dashbd.dao.model.BmscServiceAreaSearchParam" >
	select a.bmsc_id, a.service_area_id, d.name, count(*) as totalCount
	from bmsc_service_area a, service_area_enb_ap b, enb_ap c, service_area d
	where 1 = 1
	and a.bmsc_id = #{bmscId,jdbcType=INTEGER}
	and b.service_area_id = a.service_area_id
	and c.id = b.enb_ap_id
	and c.bmsc_id = a.bmsc_id
	and c.city = #{city,jdbcType=VARCHAR}
	and d.id = a.service_area_id
	group by a.bmsc_id, a.service_area_id
	</select>
	
	<!-- 
	<select id="getSeviceAreaByBmScCity" resultMap="ServiceAreaByBmScCity" parameterType="com.catenoid.dashbd.dao.model.BmscServiceAreaSearchParam" >
	select a.bmsc_id, a.service_area_id, d.name as service_area_name
	, (	select count(*) from ( select x.service_area_id
		from bmsc_service_area x, service_area_enb_ap y, enb_ap z
		where 1 = 1 and x.bmsc_id = #{bmscId,jdbcType=INTEGER} 
			and y.service_area_id = x.service_area_id and z.id = y.enb_ap_id
			and z.city = #{serviceAreaCity,jdbcType=VARCHAR}
		group by x.bmsc_id, x.service_area_id) xx ) as totalCount
	from bmsc_service_area a, service_area_enb_ap b, enb_ap c, service_area d
	where 1 = 1
	and a.bmsc_id = #{bmscId,jdbcType=INTEGER}
	and b.service_area_id = a.service_area_id
	and c.id = b.enb_ap_id
	and c.city = #{serviceAreaCity,jdbcType=VARCHAR}
	and d.id = a.service_area_id
	group by a.bmsc_id, a.service_area_id, d.name	
	order by d.created_at desc
	limit #{page,jdbcType=INTEGER}, #{perPage,jdbcType=INTEGER}
	</select>
	-->
	
	<select id="getSeviceAreaByBmScCity" resultMap="ServiceAreaByBmScCity" parameterType="com.catenoid.dashbd.dao.model.BmscServiceAreaSearchParam" >
	select a.bmsc_id, a.service_area_id, d.name as service_area_name
	, 1 as totalCount
	from bmsc_service_area a, service_area_enb_ap b, enb_ap c, service_area d
	where 1 = 1
	and a.bmsc_id = #{bmscId,jdbcType=INTEGER}
	and b.service_area_id = a.service_area_id
	and c.id = b.enb_ap_id
	and c.bmsc_id = a.bmsc_id
	and c.city = #{serviceAreaCity,jdbcType=VARCHAR}
	and d.id = a.service_area_id
	group by a.bmsc_id, a.service_area_id, d.name	
	order by d.created_at desc
	limit #{page,jdbcType=INTEGER}, #{perPage,jdbcType=INTEGER}
	</select>
	
	<!-- Service Area 로 방송 스케쥴 요약 정보 조회 -->
	<select id="getScheduleSummaryByServiceArea" resultMap="ScheduleSummaryByServiceArea" parameterType="com.catenoid.dashbd.dao.model.ScheduleSummarySearchParam" >
		select 
			a.id, a.service_area_id, a.content_id, a.bcid, a.name, a.start_date, a.end_date, a.created_at, a.updated_at, a.del_yn
			, (select path from contents_images b where 1 = 1 and b.content_id = a.content_id and type = 'thumbnail' order by id desc limit 0, 1 ) as thumbnail 
			, ( (now()-a.start_date) / (a.end_date-a.start_date) * 100 ) as progress_rate
			, b.service as service_type
			, c.category
		from schedule a, broadcast_info b, contents c
			where 1 = 1
			and a.service_area_id = #{serviceAreaId,jdbcType=INTEGER}
			and a.del_yn = 'N'
			and now() between a.start_date and a.end_date
			and b.bcid = a.bcid
			and c.id = a.content_id
		order by a.start_date
		limit 0, 20
	</select>
	
	<!-- BMSC 로 방송 스케쥴 요약 정보 조회 -->
	<select id="getScheduleSummaryByBmsc" resultMap="ScheduleSummaryByServiceArea" parameterType="java.util.HashMap" >
		select 
			a.id, a.service_area_id, a.content_id, a.bcid, a.name, a.start_date, a.end_date, a.created_at, a.updated_at, a.del_yn
			, (select path from contents_images b where 1 = 1 and b.content_id = a.content_id and type = 'thumbnail' order by id desc limit 0, 1 ) as thumbnail 
			, ( (now()-a.start_date) / (a.end_date-a.start_date) * 100 ) as progress_rate
			, b.service as service_type
			, c.category
		from schedule a, broadcast_info b, contents c
			where 1 = 1
			and a.service_area_id in (select b.service_area_id from bmsc_service_area b where b.bmsc_id = #{bmscId,jdbcType=INTEGER})
			and a.del_yn = 'N'
			and now() between a.start_date and a.end_date
			and b.bcid = a.bcid
			and c.id = a.content_id
		order by a.start_date
		limit 0, 20
	</select>
	
	<!-- Service Area 로 사용중인 Bandwidth 조회 -->
	<select id="getGBRSum" resultType="java.util.HashMap" parameterType="java.util.HashMap" >
		SELECT 
			round(((IFNULL(sum(GBR), '0') / e.bandwidth) * 100), 2) as GBRSum
		FROM 
			schedule s, broadcast_info b, enb_ap e, 
			(select enb_ap_id, service_area_id from service_area_enb_ap s where s.service_area_id = #{serviceAreaId,jdbcType=INTEGER} limit 0,1) sa
		WHERE 1=1
			AND now() between s.start_date and s.end_date
			AND s.service_area_id = #{serviceAreaId,jdbcType=INTEGER}
			and s.BCID = b.BCID
			and sa.service_area_id = s.service_area_id
			and e.id = sa.enb_ap_id
			and e.bmsc_id = #{bmscId,jdbcType=INTEGER}
	</select>
	
	<!-- Service Area 에 기지국(eNB) 추가 -->
	<!-- 
	<insert id="addToServiceArea" parameterType="java.util.HashMap" >
	insert into service_area_enb_ap 
	(service_area_id, enb_ap_id, created_at, updated_at)
	values 
	(#{serviceAreaId,jdbcType=INTEGER}, #{enbApId,jdbcType=INTEGER}, now(), now())
	</insert>
	-->

	<insert id="addToServiceArea" parameterType="java.util.HashMap" >
	insert into service_area_enb_ap 
	(service_area_id, enb_ap_id, created_at, updated_at)
	select 
		#{serviceAreaId,jdbcType=INTEGER}, #{enbApId,jdbcType=INTEGER}, now(), now()
	from dual
	where not exists 
		(select enb_ap_id 
		from service_area_enb_ap 
		where 
			service_area_id = #{serviceAreaId,jdbcType=INTEGER} 
			and enb_ap_id = #{enbApId,jdbcType=INTEGER})
	</insert>
				
	<!-- Service Area 에 등록된 기지국(eNB) 삭제 -->
	<delete id="deleteFromServiceArea" parameterType="java.util.HashMap" >
	delete from service_area_enb_ap
	where 1= 1
		and service_area_id = #{serviceAreaId,jdbcType=INTEGER}
		and enb_ap_id in 
			<foreach collection="enbApIds" item="enbApId" open="(" close=")" separator="," >
				#{enbApId}
			</foreach>
	</delete>

	<!-- Service Area 생성 -->
	<insert id="createServiceArea" parameterType="com.catenoid.dashbd.dao.model.ServiceArea" >
	insert into service_area 
	(id, bandwidth, name, city, description, created_at, updated_at)
	select  
		#{serviceAreaId,jdbcType=INTEGER}, #{bandwidth,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{city,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR}, now(), now()
	from dual
	where not exists 
		(select id 
		from service_area 
		where 
			id = #{id,jdbcType=INTEGER} 
		)
	</insert>
	
	<!-- BMSC 생성 -->
	<insert id="createBmScServiceArea" parameterType="com.catenoid.dashbd.dao.model.ServiceArea" >
	insert into bmsc_service_area 
	( bmsc_id, service_area_id, created_at, updated_at )
	select  
		#{bmscId,jdbcType=INTEGER}, #{serviceAreaId,jdbcType=INTEGER}, now(), now()
	from dual
	where not exists 
	(
		select bmsc_id 
		from bmsc_service_area 
		where 
			bmsc_id = #{bmscId, jdbcType=INTEGER} 
			and service_area_id = #{serviceAreaId, jdbcType=INTEGER}
	)
	</insert>
	
	<!-- eNB 생성 -->
	<insert id="createENBs" parameterType="java.util.HashMap" >
	insert into enb_ap 
	(
		id, name, longitude, latitude, plmn, circle, circle_name, cluster_id, 
		ipaddress, earfcn, mbsfn, mbms_service_area_id, created_at, updated_at, city, bandwidth,
		operator_id, bmsc_id
	)
	select  
		#{id,jdbcType=INTEGER}, #{name}, #{longitude}, #{latitude}, #{plmn}, #{circle}, #{circleName}, #{clusterId,jdbcType=INTEGER}, 
		#{ipAddress}, #{earfcn}, #{mbsfn}, #{mbmsServiceAreaId,jdbcType=INTEGER}, now(), now(), #{city}, #{bandwidth},
		#{operator,jdbcType=INTEGER}, #{bmsc,jdbcType=INTEGER}
	from dual
	where not exists 
		(select id 
		from enb_ap 
		where 
			id = #{id,jdbcType=INTEGER} 
		)
	</insert>

	<select id="getSeviceAreaByBmScId" resultMap="ServiceAreaByBmScId" parameterType="com.catenoid.dashbd.dao.model.BmscServiceAreaSearchParam" >
	select a.bmsc_id, a.service_area_id, d.name as service_area_name
	, (	select count(*) from ( select x.service_area_id
		from bmsc_service_area x, service_area_enb_ap y, enb_ap z
		where 1 = 1 and x.bmsc_id = #{bmscId,jdbcType=INTEGER} 
			and y.service_area_id = x.service_area_id and z.id = y.enb_ap_id
		group by x.bmsc_id, x.service_area_id) xx ) as totalCount
	from bmsc_service_area a, service_area_enb_ap b, enb_ap c, service_area d
	where 1 = 1
	and a.bmsc_id = #{bmscId,jdbcType=INTEGER}
	and b.service_area_id = a.service_area_id
	and c.id = b.enb_ap_id
	and d.id = a.service_area_id
	group by a.bmsc_id, a.service_area_id, d.name	
	</select>

	<select id="downloadENBs" resultType="java.util.HashMap" parameterType="java.util.HashMap" >
	SELECT 
		id, name, longitude, latitude, plmn, circle, circle_name, cluster_id, 
		ipaddress, earfcn, mbsfn, mbms_service_area_id, created_at, updated_at, city, ifnull(bandwidth, 0) as bandwidth,
		operator_id, bmsc_id,
		( select count(*) from enb_ap where operator_id = #{operatorId,jdbcType=INTEGER} and bmsc_id = #{bmscId,jdbcType=INTEGER} ) as totalCount
	FROM 
		enb_ap e
	WHERE 1=1
		AND operator_id = #{operatorId,jdbcType=INTEGER} 
		and bmsc_id = #{bmscId,jdbcType=INTEGER}
	</select>
	
	<select id="downloadENBsByServiceAreaId" resultType="java.util.HashMap" parameterType="java.util.HashMap" >
	select 
		e.id, e.name, e.longitude, e.latitude, e.plmn, e.circle, e.circle_name, e.cluster_id, 
		e.ipaddress, e.earfcn, e.mbsfn, e.mbms_service_area_id, e.created_at, e.updated_at, e.city, ifnull(e.bandwidth, 0) as bandwidth,
		e.operator_id, e.bmsc_id,
		( 
			select count(*) 
			from enb_ap e, service_area_enb_ap s 
			where 
				e.operator_id = #{operatorId,jdbcType=INTEGER} 
				and e.bmsc_id = #{bmscId,jdbcType=INTEGER} 
				and s.service_area_id in <foreach collection="serviceAreaIds" item="serviceAreaId" index="index" separator="," open="(" close=")">
            #{serviceAreaId}
        </foreach>
				and e.id = s.enb_ap_id
		) as totalCount
	from 
		enb_ap e, service_area_enb_ap s
	where 1=1
		and e.operator_id = #{operatorId,jdbcType=INTEGER} 
		and e.bmsc_id = #{bmscId,jdbcType=INTEGER}
		and s.service_area_id in 
			<foreach collection="serviceAreaIds" item="serviceAreaId" index="index" separator="," open="(" close=")">
            #{serviceAreaId}
        	</foreach>
		and e.id = s.enb_ap_id
	</select>
	
	<select id="getServiceAreaEnbApNotMappedSA" resultMap="ServiceAreaEnbAp" parameterType="java.util.HashMap" >
		select 
			ifnull( t1.service_area_id, '' ) as service_area_id, 
			ifnull( t1.service_area_name, '' ) as service_area_name, 
			t2.bandwidth as service_area_bandwidth, 
			t2.city as service_area_city,
			t2.id as enb_ap_id, 
			t2.name as enb_ap_name, 
			t2.longitude as longitude, 
			t2.latitude as latitude, 
			t2.plmn as plmn,
			t2.mbsfn as mbsfn,
			t2.created_at, 
			t2.updated_at
			, 0 as totalCount
		from 
			(
				select * from enb_ap
				where 1 = 1
					and latitude between #{swLat} and #{neLat}
					and longitude between #{swLng} and #{neLng}
					and bmsc_id = #{bmscId,jdbcType=INTEGER}
			) t2 left join
			( 
				select t3.id as service_area_id, t3.name as service_area_name, t1.enb_ap_id
				from 
					service_area_enb_ap t1, 
					service_area t3, 
					(select enb_ap_id, max(service_area_id) as service_area_id, count(*) from service_area_enb_ap where 1 = 1 group by enb_ap_id) t4
				where 
					t4.service_area_id = t1.service_area_id
					and t4.enb_ap_id = t1.enb_ap_id
					and t1.service_area_id = t3.id 
			) t1
		on 1 = 1
			and t1.enb_ap_id = t2.id
	</select>
	
	<select id="getSeviceAreaNotMapped" resultType="java.util.HashMap" parameterType="java.util.HashMap" >
	select 
		a.bmsc_id as bmscId, a.service_area_id as serviceAreaId, b.name as serviceAreaName
		, (	
			select count(*) 
			from bmsc_service_area a, service_area b
			where 1 = 1
				and a.bmsc_id = #{bmscId,jdbcType=INTEGER}
				and b.id = a.service_area_id
				and not exists ( select service_area_id from service_area_enb_ap where bmsc_id = a.bmsc_id  and service_area_id = a.service_area_id ) 
		) as totalCount
	from bmsc_service_area a, service_area b
	where 1 = 1
	and a.bmsc_id = #{bmscId,jdbcType=INTEGER}
	and b.id = a.service_area_id
	and not exists ( select service_area_id from service_area_enb_ap where bmsc_id = a.bmsc_id  and service_area_id = a.service_area_id )
	order by b.created_at desc
	</select>
		 
</mapper>