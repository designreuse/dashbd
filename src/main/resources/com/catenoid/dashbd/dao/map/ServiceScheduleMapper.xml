<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.catenoid.dashbd.dao.ServiceScheduleMapper" >
  <resultMap id="BaseResultMap" type="com.catenoid.dashbd.dao.model.ServiceSchedule" >
    <result column="service_id" property="serviceId" jdbcType="INTEGER" />
    <result column="schedule_id" property="scheduleId" jdbcType="INTEGER" />
    <result column="cancelled" property="cancelled" jdbcType="INTEGER" />
    <result column="start_date" property="startDate" jdbcType="TIMESTAMP" />
    <result column="end_date" property="endDate" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>  
  <sql id="Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="and" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="or" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  or ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  or ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  or ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  or ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    service_id, schedule_id, cancelled
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.catenoid.dashbd.dao.model.ServiceScheduleExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from service_schedule
    <if test="_parameter != null" >
      <include refid="Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
  	select 	service_id, schedule_id, cancelled, start_date, end_date
	from 	service_schedule t1, schedule t2
	where 	t1.schedule_id		= t2.id
	and		t1.service_id		= #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByExample" parameterType="com.catenoid.dashbd.dao.model.ServiceScheduleExample" >
    delete from service_schedule
    <if test="_parameter != null" >
      <include refid="Where_Clause" />
    </if>
  </delete>
  <delete id="deleteByServiceId" parameterType="java.lang.Integer" >
  	delete from service_schedule
  	where service_id = #{id,jdbcType=INTEGER]
  </delete>
  <insert id="insert" parameterType="com.catenoid.dashbd.dao.model.ServiceSchedule" >
    insert into service_schedule (service_id, schedule_id, cancelled)
    values (#{serviceId,jdbcType=INTEGER}, #{scheduleId,jdbcType=INTEGER}, #{cancelled,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.catenoid.dashbd.dao.model.ServiceSchedule" >
    insert into service_schedule
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="serviceId != null" >
        service_id,
      </if>
      <if test="scheduleId != null" >
        schedule_id,
      </if>      
      <if test="cancelled != null" >
      	cancelled,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="serviceId != null" >
        #{serviceId,jdbcType=INTEGER},
      </if>
      <if test="scheduleId != null" >
        #{scheduleId,jdbcType=INTEGER},
      </if>      
      <if test="cancelled != null" >
      	#{cancelled,jdbcType=INTEGER}
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.catenoid.dashbd.dao.model.ServiceScheduleExample" resultType="java.lang.Integer" >
    select count(*) from service_schedule
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update service_schedule
    <set >
      <if test="record.serviceId != null" >
        service_id = #{record.serviceId,jdbcType=INTEGER},
      </if>
      <if test="record.scheduleId != null" >
        schedule_id = #{record.scheduleId,jdbcType=INTEGER},
      </if>
      <if test="record.cancelled != null" >
      	cancelled = #{record.cancelled,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update service_schedule
    set service_id = #{record.serviceId,jdbcType=INTEGER},
      schedule_id = #{record.scheduleId,jdbcType=INTEGER},
      cancelled = #{record.cancelled,jdbcType=INTEGER},
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>